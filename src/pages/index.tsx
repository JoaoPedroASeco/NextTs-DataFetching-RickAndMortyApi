// Next/React Imports
import type { GetServerSideProps } from 'next'
import React, { useEffect, useState } from 'react'
import Image from 'next/image'
import Link from 'next/link'
import Head from 'next/head'
// Styles Import
import styles from '../styles/Home.module.css'
// Services Import
import { api } from './services/api'

export type infoType = {
  count: number,
  pages: 42,
  next: string,
  prev: string
}

export type resultsType = {
  id: number
  name: string
  status: string
  species: string
  gender: string
  origin: {
      name: string,
      url: string
  },
  location: {
      name: string,
      url: string
  },
  image: string,
  episode: string[],
  url: string,
  created: string
}

export interface HomePropsType {
  data: {
    info: infoType,
    results: Array<resultsType>
  } 
}

const Home = ({ data }: HomePropsType) => {
  const [results, updateResults] = useState(data.results)
  const [queryValue, setQueryValue] = useState('')
  const [page, updatePage] = useState({
    ...data.info, 
    current: api.get('/character')
  })

  const handleLoadMore = async () => {
    const nextData = await api.get(`${page.next}&name=${queryValue}`)

    updatePage({
      current: page.current, 
      ...nextData.data.info
    })

    if ( nextData.data.info?.prev ) {
      updateResults([...results, ...nextData.data.results])
      return
    }
  }
  
  const handleOnSubmitSearch = async (e: React.SyntheticEvent) => {
    e.preventDefault()

    try {
      const { data } = await api.get(`character/?name=${queryValue}`)

      updateResults(data.results)
  
      updatePage((prev) => {
        return {
          ...prev,
          current: data
        }
      })
    } catch(error) {
      updateResults([])
      return error
    }
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Wubba Lubba Dub Dub!</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Wubba Lubba Dub Dub!
        </h1>

        <p className={styles.description}>
          Rick and Morty Wiki
        </p>

        <form 
          onSubmit={(e) => {
            e.preventDefault()
            handleOnSubmitSearch(e)
          }}
          onChange={(e) => {
            e.preventDefault()
            handleOnSubmitSearch(e)
          }}
        >
          <input 
            name='query' 
            type='text' 
            onChange={(e) => setQueryValue(e.target.value)}
          />
        </form>

        <ul className={styles.grid}>
          {results?.map((item) => {
            const { id, name, image } = item
            return (
              <li key={id}>
                <Link href={`/character/${id}`}>
                  <a className={styles.card}>
                    <img src={image} alt={`${name} Thumb`}/>
                    <h2>{ name }</h2>
                  </a>
                </Link>

              </li>
            )
          })}

        </ul>

        <p>
          <button type='button' onClick={handleLoadMore}>Load More</button>
        </p>
      </main>

      <footer className={styles.footer}>
        <a
          href='https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app'
          target='_blank'
          rel='noopener noreferrer'
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src='/vercel.svg' alt='Vercel Logo' width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

export const getServerSideProps: GetServerSideProps = async () => {
  const { data } = await api.get('/character')

  return {props: {data}}
}

export default Home
